<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBoxCar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>